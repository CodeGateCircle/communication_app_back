openapi: "3.0.0"

info:
  version: 1.0.0
  title: communication_app
  description: "communication_app„ÅÆOpenAPI"

tags:
  - name: workspaces
    description: about workspaces
  - name: categories
    description: about categories
  - name: rooms
    description: about rooms

servers:
  - url: ---
    description: production API
  - url: http://{host}:{port}/api/v0
    description: development
    variables:
      host:
        default: localhost
      port:
        default: '3000'

paths:
  /workspaces:
    post:
      tags:
        - workspaces
      operationId: create_workspace
      summary: Create new workspace.
      description: Create new workspace.
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/workspace_data"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: "#/components/schemas/workspaceName"
                description:
                  $ref: "#/components/schemas/workspaceDescription"
                iconImageUrl:
                  $ref: "#/components/schemas/iconImageUrl"
                coverImageUrl:
                  $ref: "#/components/schemas/coverImageUrl"

  # update
  /workspaces/{workspace_id}:
    put:
      tags:
        - workspaces
      operationId: update_workspace
      summary: Update the workspace.
      description: Update the workspace
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/workspaceId"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/workspace_data"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: "#/components/schemas/workspaceName"
                description:
                  $ref: "#/components/schemas/workspaceDescription"
                iconImageUrl:
                  $ref: "#/components/schemas/iconImageUrl"
                coverImageUrl:
                  $ref: "#/components/schemas/coverImageUrl"

  /workspaces/{workspace_id}/delete:
    post:
      tags:
        - workspaces
      operationId: delete_workspace
      summary: Delete the workspace
      description: Delete the workspace
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/workspaceId"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                example: { success: true }

  /categories:
    post:
      tags:
        - categories
      operationId: create_category
      summary: Create new category.
      description: Create new category.
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/category_data"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: "#/components/schemas/name"
                workspaceId:
                  $ref: "#/components/schemas/workspaceId"

    get:
      tags:
        - categories
      operationId: get_categories
      summary: Get categories.
      description: Get categories.
      parameters:
        - name: workspace_id
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/workspaceId"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    properties:
                      categories:
                        type: array
                        items:
                          $ref: "#/components/schemas/category_data"


  /categories/{category_id}:
    put:
      tags:
        - categories
      operationId: update_category
      summary: Update the category
      description: Update the category
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/categoryId"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/category_data"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: "#/components/schemas/name"
                workspaceId:
                  $ref: "#/components/schemas/workspaceId"

  /categories/{category_id}/delete:
    post:
      tags:
        - categories
      operationId: delete_category
      summary: Delete the category
      description: Delete the category
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/categoryId"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                example: { success: true }

  /rooms:
    post:
      tags:
        - rooms
      operationId: create_room
      summary: Create new room.
      description: Create new room.
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/room_data"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: "#/components/schemas/roomName"
                description:
                  $ref: "#/components/schemas/roomDescription"
                categoryId:
                  $ref: "#/components/schemas/categoryId"
                workspaceId:
                  $ref: "#/components/schemas/workspaceId"

  /rooms/{workspace_id}:
    get:
      tags:
        - rooms
      operationId: index_room
      summary:  Index your rooms.
      description: Index your rooms.
      parameters:
        - name: workspace_id
          in: query
          description: 'workspace_id'
          required: true
          schema:
            $ref: "#/components/schemas/workspaceId"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      categories:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              $ref: "#/components/schemas/categoryId"
                            name:
                              $ref: "#/components/schemas/categoryName"
                            rooms:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    $ref: "#/components/schemas/roomId"
                                  name:
                                    $ref: "#/components/schemas/roomName"


components:
  schemas:
    workspace_data:
      description: explain
      type: object
      required:
        - workspace
      properties:
        workspace:
          description: explain
          type: object
          required:
            - id
            - name
            - description
            - iconImageUrl
            - coverImageUrl
          properties:
            id:
              $ref: "#/components/schemas/workspaceId"
            name:
              $ref: "#/components/schemas/workspaceName"
            description:
              $ref: "#/components/schemas/workspaceDescription"
            iconImageUrl:
              $ref: "#/components/schemas/iconImageUrl"
            coverImageUrl:
              $ref: "#/components/schemas/coverImageUrl"

    category_data:
      description: explain
      type: object
      required:
        - id
        - name
        - workspaceId
      properties:
        id:
          $ref: "#/components/schemas/categoryId"
        name:
          $ref: "#/components/schemas/name"
        workspaceId:
          $ref: "#/components/schemas/workspaceId"

    room_data:
      description: explain
      type: object
      required:
        - room
      properties:
        workspace:
          description: explain
          type: object
          required:
            - id
            - name
            - description
            - categoryId
            - workspaceId
          properties:
            id:
              $ref: "#/components/schemas/roomId"
            name:
              $ref: "#/components/schemas/roomName"
            description:
              $ref: "#/components/schemas/roomDescription"
            categoryId:
              $ref: "#/components/schemas/categoryId"
            workspaceId:
              $ref: "#/components/schemas/workspaceId"

    workspaceId:
      description: workspace unique id
      example: 111
      type: integer

    workspaceName:
      description: name of workspace
      example: Code.Gate?
      type: string

    workspaceDescription:
      description: description of workspace
      example: Code.Gate?„ÅÆË™¨Êòé
      type: string

    iconImageUrl:
      description: iconImageUrl
      example: http://icon_image_url
      type: string

    coverImageUrl:
      description: coverImageUrl
      example: http://cover_image_url
      type: string

    roomId:
      description: room unique id
      example: 222
      type: integer
    
    roomName:
      description: name of room
      example: ÈõëË´á
      type: string

    roomDescription:
      description: room of workspace
      example: ÈõëË´á„ÅÆË™¨Êòé
      type: string

    categoryId:
      description: category unique id
      example: 2
      type: integer

    categoryName:
      description: name of category
      example: general
      type: string